type: install
name: Mattermost Chat Service
version: 1.7
id: mattermost
categories: ["apps/dev-and-admin-tools", "apps/popular", "apps/collaboration"]
displayName: Mattermost
homepage: https://mattermost.com/
logo: https://github.com/jelastic-jps/mattermost/raw/master/images/mattermost-logo-small.png
description: Mattermost is an open-source, self-hostable online chat service with file sharing, search, and integrations. It is designed as an internal chat for organisations and companies, and mostly markets itself as an open-source alternative to Slack.
ssl: true

nodes:
  - image: mattermost/mattermost-team-edition:release-8.0
    nodeGroup: cp
    cloudlets: 16
    skipNodeEmails: true
    diskLimit: 50G
    env:
      JELASTIC_EXPOSE: 8065

  - nodeType: postgresql
    nodeGroup: sqldb
    cloudlets: 16
    diskLimit: 20G

onInstall:
  - generatePassword
  - createDB
  - configureMattermost

onAfterRedeployContainer [cp]: configureMattermost

actions:
  generatePassword:
    - script: "return {result: 0, password: '${fn.password(4)}'.toUpperCase() + '${fn.password(4)}'.toLowerCase() + '${fn.random(10)}' + '~!@#$%^&*()'['${fn.random(10)}'] };"
    - setGlobals:
        ADMIN_PASS: ${response.password}
        PG_PASSWORD: ${nodes.sqldb.password}
   
  createDB:
    - cmd[sqldb]:
       - jem passwd set -p "${globals.PG_PASSWORD}"
       - export PGPASSWORD='${globals.PG_PASSWORD}'; psql -U webadmin -d postgres -c "SELECT 1 FROM pg_database WHERE datname = 'mattermost'" | grep -q 1 || psql -U webadmin -d postgres -c "CREATE DATABASE mattermost;"
      user: root
  
  configureMattermost:
  - log: PostgreSQL password configuration
  - cmd[cp]: |-
      setcap cap_net_bind_service=+ep /mattermost/bin/mattermost
      sed -i  -e 's/mmuser:mostest/webadmin:${globals.PG_PASSWORD}/g'  -e  's|"SiteURL": \"\",|"SiteURL": "'${env.url}'",|g'  -e  's|localhost/mattermost_test|sqldb:5432/mattermost|g' -e  's/charset=utf8mb4,utf8&readTimeout=30s&writeTimeout=30s/sslmode=disable&connect_timeout=10/g' -e  's|"ListenAddress": ":8000",|"ListenAddress": ":8080",|g' -e 's|"EnableLocalMode": false,|"EnableLocalMode": true,|g' /mattermost/config/config.json
  - restartContainers [cp]
  - cmd[cp]: |-
      timeout 300 bash -c 'while [[ "$(curl -I http://localhost -s -o /dev/null -w ''%{http_code}'')" != "405" ]]; do sleep 3; done'
      EMAIL="${user.email}" && EMAIL=${EMAIL%%@*} && echo ${EMAIL%%+*}
  - setGlobals:
      username: ${response.out}
  - cmd[cp]: |-
      mmctl user create --firstname ${globals.username} --system-admin --email ${user.email} --username ${globals.username} --password '${globals.ADMIN_PASS}' --local

success: |
  ### Mattermost is ready
  **URL** : [https://${env.domain}](https://${env.domain})  
  **Admin email** : ${user.email}  
  **Admin username** : ${globals.username}  
  **Password** : ${globals.ADMIN_PASS}  

  The instructions below can help you with further managing your online chat system:

  * [Attach Public IP](https://docs.jelastic.com/public-ip)
  * [Bind custom domain](https://docs.jelastic.com/custom-domains/#configure-dns)
  * [Share access to the environment](http://docs.jelastic.com/share-environment)
  * [Adjust automatic vertical scaling settings](http://docs.jelastic.com/automatic-vertical-scaling)
  * [Monitor the statistics](http://docs.jelastic.com/view-app-statistics) & [view log files](https://docs.jelastic.com/view-log-files)
  * [Access environment via SSH](https://docs.jelastic.com/ssh-access)
  
  To add custom domain name for your Mattermost installation follow the steps described in our [documentation](http://docs.jelastic.com/custom-domains)
